

HI-TECH Software LITE Macro Assembler (PIC18) V9.63PL3 build 4692 
                                                       Mon Mar 23 13:54:44 2020

HI-TECH Software Omniscient Code Generator build 4692
     1  000000                     opt subtitle "HI-TECH Software Omniscient Code G
                                 enerator build 4692"
     2                           
     3                           	processor	18F4620
     4  000000                     porta	equ	0F80h
     5  000000                     portb	equ	0F81h
     6  000000                     portc	equ	0F82h
     7  000000                     portd	equ	0F83h
     8  000000                     porte	equ	0F84h
     9  000000                     lata	equ	0F89h
    10  000000                     latb	equ	0F8Ah
    11  000000                     latc	equ	0F8Bh
    12  000000                     latd	equ	0F8Ch
    13  000000                     late	equ	0F8Dh
    14  000000                     trisa	equ	0F92h
    15  000000                     trisb	equ	0F93h
    16  000000                     trisc	equ	0F94h
    17  000000                     trisd	equ	0F95h
    18  000000                     trise	equ	0F96h
    19  000000                     pie1	equ	0F9Dh
    20  000000                     pir1	equ	0F9Eh
    21  000000                     ipr1	equ	0F9Fh
    22  000000                     pie2	equ	0FA0h
    23  000000                     pir2	equ	0FA1h
    24  000000                     ipr2	equ	0FA2h
    25  000000                     t3con	equ	0FB1h
    26  000000                     tmr3l	equ	0FB2h
    27  000000                     tmr3h	equ	0FB3h
    28  000000                     ccp1con	equ	0FBDh
    29  000000                     ccpr1l	equ	0FBEh
    30  000000                     ccpr1h	equ	0FBFh
    31  000000                     adcon1	equ	0FC1h
    32  000000                     adcon0	equ	0FC2h
    33  000000                     adresl	equ	0FC3h
    34  000000                     adresh	equ	0FC4h
    35  000000                     sspcon2	equ	0FC5h
    36  000000                     sspcon1	equ	0FC6h
    37  000000                     sspstat	equ	0FC7h
    38  000000                     sspadd	equ	0FC8h
    39  000000                     sspbuf	equ	0FC9h
    40  000000                     t2con	equ	0FCAh
    41  000000                     pr2	equ	0FCBh
    42  000000                     tmr2	equ	0FCCh
    43  000000                     t1con	equ	0FCDh
    44  000000                     tmr1l	equ	0FCEh
    45  000000                     tmr1h	equ	0FCFh
    46  000000                     rcon	equ	0FD0h
    47  000000                     wdtcon	equ	0FD1h
    48  000000                     lvdcon	equ	0FD2h
    49  000000                     osccon	equ	0FD3h
    50  000000                     t0con	equ	0FD5h
    51  000000                     tmr0l	equ	0FD6h
    52  000000                     tmr0h	equ	0FD7h
    53  000000                     status	equ	0FD8h
    54  000000                     fsr2	equ	0FD9h
    55  000000                     fsr2l	equ	0FD9h
    56  000000                     fsr2h	equ	0FDAh
    57  000000                     plusw2	equ	0FDBh
    58  000000                     preinc2	equ	0FDCh
    59  000000                     postdec2	equ	0FDDh
    60  000000                     postinc2	equ	0FDEh
    61  000000                     indf2	equ	0FDFh
    62  000000                     bsr	equ	0FE0h
    63  000000                     fsr1	equ	0FE1h
    64  000000                     fsr1l	equ	0FE1h
    65  000000                     fsr1h	equ	0FE2h
    66  000000                     plusw1	equ	0FE3h
    67  000000                     preinc1	equ	0FE4h
    68  000000                     postdec1	equ	0FE5h
    69  000000                     postinc1	equ	0FE6h
    70  000000                     indf1	equ	0FE7h
    71  000000                     wreg	equ	0FE8h
    72  000000                     fsr0	equ	0FE9h
    73  000000                     fsr0l	equ	0FE9h
    74  000000                     fsr0h	equ	0FEAh
    75  000000                     plusw0	equ	0FEBh
    76  000000                     preinc0	equ	0FECh
    77  000000                     postdec0	equ	0FEDh
    78  000000                     postinc0	equ	0FEEh
    79  000000                     indf0	equ	0FEFh
    80  000000                     intcon3	equ	0FF0h
    81  000000                     intcon2	equ	0FF1h
    82  000000                     intcon	equ	0FF2h
    83  000000                     prod	equ	0FF3h
    84  000000                     prodl	equ	0FF3h
    85  000000                     prodh	equ	0FF4h
    86  000000                     tablat	equ	0FF5h
    87  000000                     tblptr	equ	0FF6h
    88  000000                     tblptrl	equ	0FF6h
    89  000000                     tblptrh	equ	0FF7h
    90  000000                     tblptru	equ	0FF8h
    91  000000                     pcl	equ	0FF9h
    92  000000                     pclat	equ	0FFAh
    93  000000                     pclath	equ	0FFAh
    94  000000                     pclatu	equ	0FFBh
    95  000000                     stkptr	equ	0FFCh
    96  000000                     tosl	equ	0FFDh
    97  000000                     tosh	equ	0FFEh
    98  000000                     tosu	equ	0FFFh
    99                           	global	__ramtop
   100                           	global	__accesstop
   101                           	GLOBAL	__activetblptr
   102  000000                     __activetblptr	EQU	0
   103                           	GLOBAL	__smallconst,__Lsmallconst
   104  000000                     __smallconst	EQU	__Lsmallconst
   105                           	GLOBAL	__mediumconst,__Lmediumconst
   106  000000                     __mediumconst	EQU	__Lmediumconst
   107                           	GLOBAL	__Ldata
   108  000000                     __Ldata	EQU	0
   109  000000                     LCD_Move@Row	equ	?_LCD_Move+0
   110                           	global	LCD_Move@Row
   111  000000                     LCD_Move@Col	equ	?_LCD_Move+1
   112                           	global	LCD_Move@Col
   113  000000                     LCD_Out@i	equ	??_LCD_Out+0
   114                           	global	LCD_Out@i
   115  000000                     LCD_Out@A	equ	??_LCD_Out+1
   116                           	global	LCD_Out@A
   117  000000                     LCD_Out@DATA	equ	?_LCD_Out+0
   118                           	global	LCD_Out@DATA
   119  000000                     LCD_Out@N	equ	?_LCD_Out+2
   120                           	global	LCD_Out@N
   121  000000                     ___lwmod@counter	equ	??___lwmod+0
   122                           	global	___lwmod@counter
   123  000000                     ___lwmod@dividend	equ	?___lwmod+0
   124                           	global	___lwmod@dividend
   125  000000                     ___lwmod@divisor	equ	?___lwmod+2
   126                           	global	___lwmod@divisor
   127  000000                     LCD_Inst@c	equ	?_LCD_Inst+0
   128                           	global	LCD_Inst@c
   129  000000                     LCD_Write@c	equ	?_LCD_Write+0
   130                           	global	LCD_Write@c
   131  000000                     ___lwdiv@counter	equ	??___lwdiv+0
   132                           	global	___lwdiv@counter
   133  000000                     ___lwdiv@quotient	equ	??___lwdiv+1
   134                           	global	___lwdiv@quotient
   135  000000                     ___lwdiv@dividend	equ	?___lwdiv+0
   136                           	global	___lwdiv@dividend
   137  000000                     ___lwdiv@divisor	equ	?___lwdiv+2
   138                           	global	___lwdiv@divisor
   139  000000                     Wait_ms@i	equ	??_Wait_ms+0
   140                           	global	Wait_ms@i
   141  000000                     Wait_ms@j	equ	??_Wait_ms+2
   142                           	global	Wait_ms@j
   143  000000                     Wait_ms@X	equ	?_Wait_ms+0
   144                           	global	Wait_ms@X
   145  000000                     LCD_Pause@x	equ	??_LCD_Pause+0
   146                           	global	LCD_Pause@x
   147                           ;Data sizes: Strings 0, constant 0, data 0, bss 
                                 0, persistent 0 stack 37
   148                           	global	_main
   149                           	global	??_main
   150                           	global	?_main
   151                                   psect   text0,class=CODE,space=0,reloc=2
   152                           
   153                           	opt lm
   154                           	file	"C:\Users\leeee\Desktop\HW8_1\Timer2.c"
   155                           	line	37
   156  000000                     	__size_of_main	equ	__end_of_main-_main
   157                           ;Timer2.c: 36: void main(void)
   158                           ;Timer2.c: 37: {
   159                           	
   160  000B5C                     _main:		; BSR set to: ?
   161                           
   162                           	opt stack 30
   163                           	line	38
   164  000B5C  0E00               	movlw	low(0)
   165  000B5E  6E92               	movwf	((c:3986)),c	;volatile
   166                           	line	39
   167                           ;Timer2.c: 39: TRISB = 0xFF;
   168  000B60  6893               	setf	((c:3987)),c	;volatile
   169                           	line	40
   170                           ;Timer2.c: 40: TRISC = 0;
   171  000B62  0E00               	movlw	low(0)
   172  000B64  6E94               	movwf	((c:3988)),c	;volatile
   173                           	line	41
   174                           ;Timer2.c: 41: TRISD = 0;
   175  000B66  0E00               	movlw	low(0)
   176  000B68  6E95               	movwf	((c:3989)),c	;volatile
   177                           	line	42
   178                           ;Timer2.c: 42: ADCON1 = 15;
   179  000B6A  0101               	movlb	1	; () banked
   180  000B6C  6F00               	movwf	(??_main+0+0)&0ffh
   181  000B6E  0E0F               	movlw	low(0Fh)
   182  000B70  6EC1               	movwf	((c:4033)),c
   183  000B72  0101               	movlb	1	; () banked
   184  000B74  5100               	movf	(??_main+0+0)&0ffh,w
   185                           	line	43
   186                           ;Timer2.c: 43: LCD_Init();
   187  000B76  ECFA  F005         	call	_LCD_Init	;wreg free
   188                           	line	46
   189                           ;Timer2.c: 46: PR2 = 249;
   190  000B7A  0101               	movlb	1	; () banked
   191  000B7C  6F00               	movwf	(??_main+0+0)&0ffh
   192  000B7E  0EF9               	movlw	low(0F9h)
   193  000B80  6ECB               	movwf	((c:4043)),c
   194  000B82  0101               	movlb	1	; () banked
   195  000B84  5100               	movf	(??_main+0+0)&0ffh,w
   196                           	line	47
   197                           ;Timer2.c: 47: T2CON = 0x4D;
   198  000B86  0101               	movlb	1	; () banked
   199  000B88  6F00               	movwf	(??_main+0+0)&0ffh
   200  000B8A  0E4D               	movlw	low(04Dh)
   201  000B8C  6ECA               	movwf	((c:4042)),c
   202  000B8E  0101               	movlb	1	; () banked
   203  000B90  5100               	movf	(??_main+0+0)&0ffh,w
   204                           	line	48
   205                           ;Timer2.c: 48: TMR2IE = 1;
   206  000B92  829D               	bsf	c:(31977/8),(31977)&7
   207                           	line	49
   208                           ;Timer2.c: 49: PEIE = 1;
   209  000B94  8CF2               	bsf	c:(32662/8),(32662)&7
   210                           	line	50
   211                           ;Timer2.c: 50: TMR2IP = 1;
   212  000B96  829F               	bsf	c:(31993/8),(31993)&7
   213                           	line	51
   214                           ;Timer2.c: 51: TIME = 0;
   215  000B98  0E00               	movlw	low(0)
   216  000B9A  6E01               	movwf	((c:1)),c
   217  000B9C  0E00               	movlw	high(0)
   218  000B9E  6E02               	movwf	((c:1+1)),c
   219                           	line	52
   220                           ;Timer2.c: 52: RUN = 0;
   221  000BA0  0101               	movlb	1	; () banked
   222  000BA2  6F00               	movwf	(??_main+0+0)&0ffh
   223  000BA4  0E00               	movlw	low(0)
   224  000BA6  6E00               	movwf	((c:0)),c
   225  000BA8  0101               	movlb	1	; () banked
   226  000BAA  5100               	movf	(??_main+0+0)&0ffh,w
   227                           	line	53
   228                           ;Timer2.c: 53: GIE = 1;
   229  000BAC  8EF2               	bsf	c:(32663/8),(32663)&7
   230                           	line	55
   231                           ;Timer2.c: 55: while(1) {
   232                           	
   233  000BAE                     l172:		; BSR set to: ?
   234                           
   235                           	line	56
   236                           ;Timer2.c: 56: RA1 = !RA1;
   237  000BAE  7280               	btg	c:(31745/8),(31745)&7	;volatile
   238                           	line	57
   239                           ;Timer2.c: 57: LCD_Move(1,0);
   240  000BB0  0101               	movlb	1	; () banked
   241  000BB2  6F00               	movwf	(??_main+0+0)&0ffh
   242  000BB4  0E00               	movlw	low(0)
   243  000BB6  0101               	movlb	1	; () banked
   244  000BB8  0101               	movlb	1	; () banked
   245  000BBA  6F03               	movwf	(0+(?_LCD_Move+01h))&0ffh
   246  000BBC  0101               	movlb	1	; () banked
   247  000BBE  5100               	movf	(??_main+0+0)&0ffh,w
   248  000BC0  0101               	movlb	1	; () banked
   249  000BC2  6F01               	movwf	(??_main+1+0)&0ffh
   250  000BC4  0E01               	movlw	low(01h)
   251  000BC6  0101               	movlb	1	; () banked
   252  000BC8  0101               	movlb	1	; () banked
   253  000BCA  6F02               	movwf	((?_LCD_Move))&0ffh
   254  000BCC  0101               	movlb	1	; () banked
   255  000BCE  5101               	movf	(??_main+1+0)&0ffh,w
   256  000BD0  EC43  F006         	call	_LCD_Move	;wreg free
   257                           	line	58
   258                           ;Timer2.c: 58: LCD_Out(TIME, 3);
   259  000BD4  0E03               	movlw	low(03h)
   260  000BD6  0101               	movlb	1	; () banked
   261  000BD8  0101               	movlb	1	; () banked
   262  000BDA  6F04               	movwf	(0+(?_LCD_Out+02h))&0ffh
   263  000BDC  0E00               	movlw	high(03h)
   264  000BDE  0101               	movlb	1	; () banked
   265  000BE0  6F05               	movwf	(1+(?_LCD_Out+02h))&0ffh
   266  000BE2  C001 F102          	movff	(c:1),(?_LCD_Out)
   267  000BE6  C002 F103          	movff	(c:1+1),(?_LCD_Out+1)
   268  000BEA  EC1B  F004         	call	_LCD_Out	;wreg free
   269                           	line	59
   270                           	
   271  000BEE                     l171:		; BSR set to: ?
   272                           
   273                           	line	55
   274  000BEE  D7DF               	goto	l172
   275                           	global	start
   276  000BF0  EF0C  F004         	goto	start
   277                           	opt stack 0
   278                           GLOBAL __end_of_main
   279  000BF4                     	__end_of_main:
   280                           	FNSIZE	_main,2,0
   281                           ; =============== function _main ends ==========
                                 ==
   282                           
   283                                   psect   text1,class=CODE,space=0,reloc=2
   284                           	line	60
   285                           
   286                           	opt lm
   287                           	signat	_main,88
   288                           	global	_LCD_Move
   289                           	global	??_LCD_Move
   290                           	global	?_LCD_Move
   291                           	file	"C:\Users\leeee\Desktop\HW8_1\LCD_PortD.C"
   292                           	line	54
   293  000000                     	__size_of_LCD_Move	equ	__end_of_LCD_Move-_LCD_M
                                 ove
   294                           ;LCD_PortD.C: 53: void LCD_Move(unsigned char Ro
                                 w, unsigned char Col)
   295                           ;LCD_PortD.C: 54: {
   296                           	
   297  000C86                     _LCD_Move:		; BSR set to: ?
   298                           
   299                           	opt stack 29
   300                           	line	55
   301                           ;LCD_PortD.C: 55: if (Row == 0) LCD_Inst(0x80 + 
                                 Col);
   302  000C86  0101               	movlb	1	; () banked
   303  000C88  0101               	movlb	1	; () banked
   304  000C8A  6702               	tstfsz	((LCD_Move@Row))&0ffh
   305  000C8C  D001               	goto	u1331
   306  000C8E  D001               	goto	u1330
   307  000C90                     u1331:
   308  000C90  D009               	goto	l124
   309  000C92                     u1330:
   310  000C92  0101               	movlb	1	; () banked
   311  000C94  0101               	movlb	1	; () banked
   312  000C96  5103               	movf	((LCD_Move@Col))&0ffh,w
   313  000C98  0F80               	addlw	low(080h)
   314  000C9A  0101               	movlb	1	; () banked
   315  000C9C  0101               	movlb	1	; () banked
   316  000C9E  6F04               	movwf	((?_LCD_Inst))&0ffh
   317  000CA0  ECC4  F006         	call	_LCD_Inst	;wreg free
   318                           	
   319  000CA4                     l124:		; BSR set to: ?
   320                           
   321                           	line	56
   322                           ;LCD_PortD.C: 56: if (Row == 1) LCD_Inst(0xC0 + 
                                 Col);
   323  000CA4  0101               	movlb	1	; () banked
   324  000CA6  0101               	movlb	1	; () banked
   325  000CA8  0502               	decf	((LCD_Move@Row))&0ffh,w
   326                           
   327  000CAA  A4D8               	btfss	status,2
   328  000CAC  D001               	goto	u1341
   329  000CAE  D001               	goto	u1340
   330  000CB0                     u1341:
   331  000CB0  D009               	goto	l125
   332  000CB2                     u1340:
   333  000CB2  0101               	movlb	1	; () banked
   334  000CB4  0101               	movlb	1	; () banked
   335  000CB6  5103               	movf	((LCD_Move@Col))&0ffh,w
   336  000CB8  0FC0               	addlw	low(0C0h)
   337  000CBA  0101               	movlb	1	; () banked
   338  000CBC  0101               	movlb	1	; () banked
   339  000CBE  6F04               	movwf	((?_LCD_Inst))&0ffh
   340  000CC0  ECC4  F006         	call	_LCD_Inst	;wreg free
   341                           	
   342  000CC4                     l125:		; BSR set to: ?
   343                           
   344                           	line	57
   345                           ;LCD_PortD.C: 57: if (Row == 2) LCD_Inst(0x94 + 
                                 Col);
   346  000CC4  0101               	movlb	1	; () banked
   347  000CC6  0101               	movlb	1	; () banked
   348  000CC8  5102               	movf	((LCD_Move@Row))&0ffh,w
   349  000CCA  0A02               	xorlw	2
   350                           
   351  000CCC  A4D8               	btfss	status,2
   352  000CCE  D001               	goto	u1351
   353  000CD0  D001               	goto	u1350
   354  000CD2                     u1351:
   355  000CD2  D009               	goto	l126
   356  000CD4                     u1350:
   357  000CD4  0101               	movlb	1	; () banked
   358  000CD6  0101               	movlb	1	; () banked
   359  000CD8  5103               	movf	((LCD_Move@Col))&0ffh,w
   360  000CDA  0F94               	addlw	low(094h)
   361  000CDC  0101               	movlb	1	; () banked
   362  000CDE  0101               	movlb	1	; () banked
   363  000CE0  6F04               	movwf	((?_LCD_Inst))&0ffh
   364  000CE2  ECC4  F006         	call	_LCD_Inst	;wreg free
   365                           	
   366  000CE6                     l126:		; BSR set to: ?
   367                           
   368                           	line	58
   369                           ;LCD_PortD.C: 58: if (Row == 3) LCD_Inst(0xD4 + 
                                 Col);
   370  000CE6  0101               	movlb	1	; () banked
   371  000CE8  0101               	movlb	1	; () banked
   372  000CEA  5102               	movf	((LCD_Move@Row))&0ffh,w
   373  000CEC  0A03               	xorlw	3
   374                           
   375  000CEE  A4D8               	btfss	status,2
   376  000CF0  D001               	goto	u1361
   377  000CF2  D001               	goto	u1360
   378+ 000CF4                     u1361:
   379  000CF4  D009               	goto	l127
   380  000CF6                     u1360:
   381  000CF6  0101               	movlb	1	; () banked
   382  000CF8  0101               	movlb	1	; () banked
   383  000CFA  5103               	movf	((LCD_Move@Col))&0ffh,w
   384  000CFC  0FD4               	addlw	low(0D4h)
   385  000CFE  0101               	movlb	1	; () banked
   386  000D00  0101               	movlb	1	; () banked
   387  000D02  6F04               	movwf	((?_LCD_Inst))&0ffh
   388  000D04  ECC4  F006         	call	_LCD_Inst	;wreg free
   389                           	
   390  000D08                     l127:		; BSR set to: ?
   391                           
   392                           	line	59
   393                           ;LCD_PortD.C: 59: }
   394  000D08                     l123:
   395                           			; BSR set to: ?
   396                           
   397  000D08  0012               	return
   398                           	opt stack 0
   399                           GLOBAL __end_of_LCD_Move
   400  000D0A                     	__end_of_LCD_Move:
   401                           	FNSIZE	_LCD_Move,0,2
   402                           ; =============== function _LCD_Move ends ======
                                 ======
   403                           
   404                           	signat	_LCD_Move,8312
   405                           	global	_LCD_Out
   406                           	global	??_LCD_Out
   407                           	global	?_LCD_Out
   408                                   psect   text2,class=CODE,space=0,reloc=2
   409                           
   410                           	opt lm
   411                           	file	"C:\Users\leeee\Desktop\HW8_1\Timer2.c"
   412                           	line	23
   413  000000                     	__size_of_LCD_Out	equ	__end_of_LCD_Out-_LCD_Out
   414                           ;Timer2.c: 22: void LCD_Out(unsigned int DATA, u
                                 nsigned int N)
   415                           ;Timer2.c: 23: {
   416                           	
   417  000836                     _LCD_Out:		; BSR set to: ?
   418                           
   419                           	opt stack 29
   420                           	line	25
   421  000836  0101               	movlb	1	; () banked
   422  000838  6F0D               	movwf	(??_LCD_Out+7+0)&0ffh
   423  00083A  0E00               	movlw	low(0)
   424  00083C  0101               	movlb	1	; () banked
   425  00083E  0101               	movlb	1	; () banked
   426  000840  6F06               	movwf	((LCD_Out@i))&0ffh
   427  000842  0101               	movlb	1	; () banked
   428  000844  510D               	movf	(??_LCD_Out+7+0)&0ffh,w
   429  000846  0E04               	movlw	(05h-1)
   430  000848  0101               	movlb	1	; () banked
   431  00084A  0101               	movlb	1	; () banked
   432  00084C  6506               	cpfsgt	((LCD_Out@i))&0ffh
   433  00084E  D001               	goto	u1371
   434  000850  D001               	goto	u1370
   435  000852                     u1371:
   436  000852  D001               	goto	l163
   437  000854                     u1370:
   438  000854  D036               	goto	l164
   439                           	
   440  000856                     l163:		; BSR set to: ?
   441                           
   442                           	line	26
   443                           ;Timer2.c: 26: A[i] = DATA % 10;
   444  000856  0101               	movlb	1	; () banked
   445  000858  0E07               	movlw	low(LCD_Out@A)
   446  00085A  0101               	movlb	1	; () banked
   447  00085C  0101               	movlb	1	; () banked
   448  00085E  2506               	addwf	((LCD_Out@i))&0ffh,w
   449  000860  6EE9               	movwf	c:fsr0l
   450  000862  6AEA               	clrf	1+c:fsr0l
   451  000864  0101               	movlb	1	; () banked
   452  000866  0E01               	movlw	high(LCD_Out@A)
   453  000868  22EA               	addwfc	1+c:fsr0l
   454  00086A  0E0A               	movlw	low(0Ah)
   455  00086C  0101               	movlb	1	; () banked
   456  00086E  0101               	movlb	1	; () banked
   457  000870  6F11               	movwf	(0+(?___lwmod+02h))&0ffh
   458  000872  0E00               	movlw	high(0Ah)
   459  000874  0101               	movlb	1	; () banked
   460  000876  6F12               	movwf	(1+(?___lwmod+02h))&0ffh
   461  000878  C102  F10F         	movff	(LCD_Out@DATA),(?___lwmod)
   462  00087C  C103  F110         	movff	(LCD_Out@DATA+1),(?___lwmod+1)
   463  000880  EC62  F005         	call	___lwmod	;wreg free
   464  000884  0101               	movlb	1	; () banked
   465  000886  0101               	movlb	1	; () banked
   466  000888  510F               	movf	(0+?___lwmod)&0ffh,w
   467  00088A  6EEF               	movwf	indf0
   468                           
   469                           	line	27
   470                           ;Timer2.c: 27: DATA = DATA / 10;
   471  00088C  0E0A               	movlw	low(0Ah)
   472  00088E  0101               	movlb	1	; () banked
   473  000890  0101               	movlb	1	; () banked
   474  000892  6F11               	movwf	(0+(?___lwdiv+02h))&0ffh
   475  000894  0E00               	movlw	high(0Ah)
   476  000896  0101               	movlb	1	; () banked
   477  000898  6F12               	movwf	(1+(?___lwdiv+02h))&0ffh
   478  00089A  C102  F10F         	movff	(LCD_Out@DATA),(?___lwdiv)
   479  00089E  C103  F110         	movff	(LCD_Out@DATA+1),(?___lwdiv+1)
   480  0008A2  ECAD  F004         	call	___lwdiv	;wreg free
   481  0008A6  C10F  F102         	movff	0+?___lwdiv,(LCD_Out@DATA)
   482  0008AA  C110  F103         	movff	1+?___lwdiv,(LCD_Out@DATA+1)
   483                           	line	25
   484  0008AE  0101               	movlb	1	; () banked
   485  0008B0  0101               	movlb	1	; () banked
   486  0008B2  2B06               	incf	((LCD_Out@i))&0ffh
   487  0008B4  0E04               	movlw	(05h-1)
   488  0008B6  0101               	movlb	1	; () banked
   489  0008B8  0101               	movlb	1	; () banked
   490  0008BA  6506               	cpfsgt	((LCD_Out@i))&0ffh
   491  0008BC  D001               	goto	u1381
   492  0008BE  D001               	goto	u1380
   493  0008C0                     u1381:
   494  0008C0  D7CA               	goto	l163
   495  0008C2                     u1380:
   496                           	
   497  0008C2                     l164:		; BSR set to: ?
   498                           
   499                           	line	29
   500                           ;Timer2.c: 28: }
   501                           ;Timer2.c: 29: for (i=5; i>0; i--) {
   502  0008C2  0101               	movlb	1	; () banked
   503  0008C4  6F0D               	movwf	(??_LCD_Out+7+0)&0ffh
   504  0008C6  0E05               	movlw	low(05h)
   505  0008C8  0101               	movlb	1	; () banked
   506  0008CA  0101               	movlb	1	; () banked
   507  0008CC  6F06               	movwf	((LCD_Out@i))&0ffh
   508  0008CE  0101               	movlb	1	; () banked
   509  0008D0  510D               	movf	(??_LCD_Out+7+0)&0ffh,w
   510  0008D2  0101               	movlb	1	; () banked
   511  0008D4  0101               	movlb	1	; () banked
   512  0008D6  6706               	tstfsz	((LCD_Out@i))&0ffh
   513  0008D8  D001               	goto	u1391
   514  0008DA  D001               	goto	u1390
   515  0008DC                     u1391:
   516  0008DC  D001               	goto	l166
   517  0008DE                     u1390:
   518  0008DE  D03C               	goto	l167
   519                           	
   520  0008E0                     l166:		; BSR set to: ?
   521                           
   522                           	line	30
   523                           ;Timer2.c: 30: if (i == N) LCD_Write('.');
   524  0008E0  0101               	movlb	1	; () banked
   525  0008E2  C106  F10D         	movff	(LCD_Out@i),??_LCD_Out+7+0
   526  0008E6  0101               	movlb	1	; () banked
   527  0008E8  6B0E               	clrf	(??_LCD_Out+7+0+1)&0ffh
   528  0008EA  0101               	movlb	1	; () banked
   529  0008EC  0101               	movlb	1	; () banked
   530  0008EE  5105               	movf	((LCD_Out@N+1))&0ffh,w
   531  0008F0  0101               	movlb	1	; () banked
   532  0008F2  190E               	xorwf	(??_LCD_Out+7+1)&0ffh,w
   533  0008F4  E105               	bnz	u1405
   534  0008F6  0101               	movlb	1	; () banked
   535  0008F8  0101               	movlb	1	; () banked
   536  0008FA  5104               	movf	((LCD_Out@N))&0ffh,w
   537  0008FC  0101               	movlb	1	; () banked
   538  0008FE  190D               	xorwf	(??_LCD_Out+7+0)&0ffh,w
   539  000900                     u1405:
   540                           
   541  000900  A4D8               	btfss	status,2
   542  000902  D001               	goto	u1401
   543  000904  D001               	goto	u1400
   544  000906                     u1401:
   545  000906  D00A               	goto	l169
   546  000908                     u1400:
   547  000908  0101               	movlb	1	; () banked
   548  00090A  6F0D               	movwf	(??_LCD_Out+7+0)&0ffh
   549  00090C  0E2E               	movlw	low(02Eh)
   550  00090E  0101               	movlb	1	; () banked
   551  000910  0101               	movlb	1	; () banked
   552  000912  6F0F               	movwf	((?_LCD_Write))&0ffh
   553  000914  0101               	movlb	1	; () banked
   554  000916  510D               	movf	(??_LCD_Out+7+0)&0ffh,w
   555  000918  ECEB  F006         	call	_LCD_Write	;wreg free
   556                           	
   557  00091C                     l169:		; BSR set to: ?
   558                           
   559                           	line	31
   560                           ;Timer2.c: 31: LCD_Write(A[i-1] + 48);
   561  00091C  C106  F10D         	movff	(LCD_Out@i),??_LCD_Out+7+0
   562  000920  0EFF               	movlw	-1
   563  000922  0101               	movlb	1	; () banked
   564  000924  270D               	addwf	(??_LCD_Out+7+0)&0ffh
   565  000926  0101               	movlb	1	; () banked
   566  000928  0E07               	movlw	low(LCD_Out@A)
   567  00092A  0101               	movlb	1	; () banked
   568  00092C  250D               	addwf	(??_LCD_Out+7+0)&0ffh,w
   569+ 00092E  6EE9               	movwf	c:fsr0l
   570  000930  6AEA               	clrf	1+c:fsr0l
   571  000932  0101               	movlb	1	; () banked
   572  000934  0E01               	movlw	high(LCD_Out@A)
   573  000936  22EA               	addwfc	1+c:fsr0l
   574  000938  50EF               	movf	indf0,w
   575  00093A  0F30               	addlw	low(030h)
   576  00093C  0101               	movlb	1	; () banked
   577  00093E  0101               	movlb	1	; () banked
   578  000940  6F0F               	movwf	((?_LCD_Write))&0ffh
   579  000942  ECEB  F006         	call	_LCD_Write	;wreg free
   580                           	line	29
   581  000946  0101               	movlb	1	; () banked
   582  000948  0101               	movlb	1	; () banked
   583  00094A  0706               	decf	((LCD_Out@i))&0ffh
   584  00094C  0101               	movlb	1	; () banked
   585  00094E  0101               	movlb	1	; () banked
   586  000950  6706               	tstfsz	((LCD_Out@i))&0ffh
   587  000952  D001               	goto	u1411
   588  000954  D001               	goto	u1410
   589  000956                     u1411:
   590  000956  D7C4               	goto	l166
   591  000958                     u1410:
   592                           	
   593  000958                     l167:		; BSR set to: ?
   594                           
   595                           	line	33
   596                           ;Timer2.c: 32: }
   597                           ;Timer2.c: 33: }
   598  000958                     l162:
   599                           			; BSR set to: ?
   600                           
   601  000958  0012               	return
   602                           	opt stack 0
   603                           GLOBAL __end_of_LCD_Out
   604  00095A                     	__end_of_LCD_Out:
   605                           	FNSIZE	_LCD_Out,9,4
   606                           ; =============== function _LCD_Out ends =======
                                 =====
   607                           
   608                           	signat	_LCD_Out,8312
   609                           	global	_LCD_Init
   610                           	global	??_LCD_Init
   611                           	global	?_LCD_Init
   612                                   psect   text3,class=CODE,space=0,reloc=2
   613                           
   614                           	opt lm
   615                           	file	"C:\Users\leeee\Desktop\HW8_1\LCD_PortD.C"
   616                           	line	73
   617  000000                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_I
                                 nit
   618                           ;LCD_PortD.C: 72: void LCD_Init(void)
   619                           ;LCD_PortD.C: 73: {
   620                           	
   621  000BF4                     _LCD_Init:		; BSR set to: ?
   622                           
   623                           	opt stack 29
   624                           	line	74
   625  000BF4  0E01               	movlw	low(01h)
   626  000BF6  6E95               	movwf	((c:3989)),c	;volatile
   627                           	line	75
   628                           ;LCD_PortD.C: 75: RD1 = 0;
   629  000BF8  9283               	bcf	c:(31769/8),(31769)&7	;volatile
   630                           	line	76
   631                           ;LCD_PortD.C: 76: LCD_Inst(0x33);
   632  000BFA  0101               	movlb	1	; () banked
   633  000BFC  6F02               	movwf	(??_LCD_Init+0+0)&0ffh
   634  000BFE  0E33               	movlw	low(033h)
   635  000C00  0101               	movlb	1	; () banked
   636  000C02  0101               	movlb	1	; () banked
   637  000C04  6F04               	movwf	((?_LCD_Inst))&0ffh
   638  000C06  0101               	movlb	1	; () banked
   639  000C08  5102               	movf	(??_LCD_Init+0+0)&0ffh,w
   640  000C0A  ECC4  F006         	call	_LCD_Inst	;wreg free
   641                           	line	77
   642                           ;LCD_PortD.C: 77: LCD_Inst(0x32);
   643  000C0E  0101               	movlb	1	; () banked
   644  000C10  6F02               	movwf	(??_LCD_Init+0+0)&0ffh
   645  000C12  0E32               	movlw	low(032h)
   646  000C14  0101               	movlb	1	; () banked
   647  000C16  0101               	movlb	1	; () banked
   648  000C18  6F04               	movwf	((?_LCD_Inst))&0ffh
   649  000C1A  0101               	movlb	1	; () banked
   650  000C1C  5102               	movf	(??_LCD_Init+0+0)&0ffh,w
   651  000C1E  ECC4  F006         	call	_LCD_Inst	;wreg free
   652                           	line	78
   653                           ;LCD_PortD.C: 78: LCD_Inst(0x28);
   654  000C22  0101               	movlb	1	; () banked
   655  000C24  6F02               	movwf	(??_LCD_Init+0+0)&0ffh
   656  000C26  0E28               	movlw	low(028h)
   657  000C28  0101               	movlb	1	; () banked
   658  000C2A  0101               	movlb	1	; () banked
   659  000C2C  6F04               	movwf	((?_LCD_Inst))&0ffh
   660  000C2E  0101               	movlb	1	; () banked
   661  000C30  5102               	movf	(??_LCD_Init+0+0)&0ffh,w
   662  000C32  ECC4  F006         	call	_LCD_Inst	;wreg free
   663                           	line	79
   664                           ;LCD_PortD.C: 79: LCD_Inst(0x0E);
   665  000C36  0101               	movlb	1	; () banked
   666  000C38  6F02               	movwf	(??_LCD_Init+0+0)&0ffh
   667  000C3A  0E0E               	movlw	low(0Eh)
   668  000C3C  0101               	movlb	1	; () banked
   669  000C3E  0101               	movlb	1	; () banked
   670  000C40  6F04               	movwf	((?_LCD_Inst))&0ffh
   671  000C42  0101               	movlb	1	; () banked
   672  000C44  5102               	movf	(??_LCD_Init+0+0)&0ffh,w
   673  000C46  ECC4  F006         	call	_LCD_Inst	;wreg free
   674                           	line	80
   675                           ;LCD_PortD.C: 80: LCD_Inst(0x01);
   676  000C4A  0101               	movlb	1	; () banked
   677  000C4C  6F02               	movwf	(??_LCD_Init+0+0)&0ffh
   678  000C4E  0E01               	movlw	low(01h)
   679  000C50  0101               	movlb	1	; () banked
   680  000C52  0101               	movlb	1	; () banked
   681  000C54  6F04               	movwf	((?_LCD_Inst))&0ffh
   682  000C56  0101               	movlb	1	; () banked
   683  000C58  5102               	movf	(??_LCD_Init+0+0)&0ffh,w
   684  000C5A  ECC4  F006         	call	_LCD_Inst	;wreg free
   685                           	line	81
   686                           ;LCD_PortD.C: 81: LCD_Inst(0x06);
   687  000C5E  0101               	movlb	1	; () banked
   688  000C60  6F02               	movwf	(??_LCD_Init+0+0)&0ffh
   689  000C62  0E06               	movlw	low(06h)
   690  000C64  0101               	movlb	1	; () banked
   691  000C66  0101               	movlb	1	; () banked
   692  000C68  6F04               	movwf	((?_LCD_Inst))&0ffh
   693  000C6A  0101               	movlb	1	; () banked
   694  000C6C  5102               	movf	(??_LCD_Init+0+0)&0ffh,w
   695  000C6E  ECC4  F006         	call	_LCD_Inst	;wreg free
   696                           	line	82
   697                           ;LCD_PortD.C: 82: Wait_ms(100);
   698  000C72  0E64               	movlw	low(064h)
   699  000C74  0101               	movlb	1	; () banked
   700  000C76  0101               	movlb	1	; () banked
   701  000C78  6F06               	movwf	((?_Wait_ms))&0ffh
   702  000C7A  0E00               	movlw	high(064h)
   703  000C7C  0101               	movlb	1	; () banked
   704  000C7E  6F07               	movwf	((?_Wait_ms+1))&0ffh
   705  000C80  EC85  F006         	call	_Wait_ms	;wreg free
   706                           	line	83
   707                           ;LCD_PortD.C: 83: }
   708  000C84                     l129:
   709                           			; BSR set to: ?
   710                           
   711  000C84  0012               	return
   712                           	opt stack 0
   713                           GLOBAL __end_of_LCD_Init
   714  000C86                     	__end_of_LCD_Init:
   715                           	FNSIZE	_LCD_Init,1,0
   716                           ; =============== function _LCD_Init ends ======
                                 ======
   717                           
   718                           	signat	_LCD_Init,88
   719                           	global	___lwmod
   720                           	global	??___lwmod
   721                           	global	?___lwmod
   722                                   psect   text4,class=CODE,space=0,reloc=2
   723                           
   724                           	opt lm
   725                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\lwmod.c"
   726                           	line	5
   727  000000                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
   728                           	
   729  000AC4                     ___lwmod:		; BSR set to: ?
   730                           
   731                           	opt stack 28
   732                           	line	8
   733  000AC4  0101               	movlb	1	; () banked
   734  000AC6  0101               	movlb	1	; () banked
   735  000AC8  5112               	movf	((___lwmod@divisor+1))&0ffh,w
   736  000ACA  1111               	iorwf ((___lwmod@divisor))&0ffh,w
   737                           
   738  000ACC  B4D8               	btfsc	status,2
   739  000ACE  D001               	goto	u1421
   740  000AD0  D001               	goto	u1420
   741  000AD2                     u1421:
   742  000AD2  D03E               	goto	l493
   743  000AD4                     u1420:
   744                           	line	9
   745  000AD4  0101               	movlb	1	; () banked
   746  000AD6  6F14               	movwf	(??___lwmod+1+0)&0ffh
   747  000AD8  0E01               	movlw	low(01h)
   748  000ADA  0101               	movlb	1	; () banked
   749  000ADC  0101               	movlb	1	; () banked
   750  000ADE  6F13               	movwf	((___lwmod@counter))&0ffh
   751  000AE0  0101               	movlb	1	; () banked
   752  000AE2  5114               	movf	(??___lwmod+1+0)&0ffh,w
   753                           	line	10
   754  000AE4  D009               	goto	l494
   755                           	
   756  000AE6                     l495:		; BSR set to: ?
   757                           
   758                           	line	11
   759  000AE6  0101               	movlb	1	; () banked
   760  000AE8  90D8               	bcf	status,0
   761  000AEA  0101               	movlb	1	; () banked
   762  000AEC  3711               	rlcf	((___lwmod@divisor))&0ffh
   763  000AEE  0101               	movlb	1	; () banked
   764  000AF0  3712               	rlcf	((___lwmod@divisor+1))&0ffh
   765                           	line	12
   766  000AF2  0101               	movlb	1	; () banked
   767  000AF4  0101               	movlb	1	; () banked
   768  000AF6  2B13               	incf	((___lwmod@counter))&0ffh
   769                           	line	13
   770                           	
   771  000AF8                     l494:		; BSR set to: ?
   772                           
   773                           	line	10
   774  000AF8  0101               	movlb	1	; () banked
   775                           	
   776  000AFA  0101               	movlb	1	; () banked
   777  000AFC  AF12               	btfss	((___lwmod@divisor+1))&0ffh,(15)&7
   778  000AFE  D001               	goto	u1431
   779  000B00  D001               	goto	u1430
   780  000B02                     u1431:
   781  000B02  D7F1               	goto	l495
   782  000B04                     u1430:
   783                           	
   784  000B04                     l496:		; BSR set to: ?
   785                           
   786                           	line	14
   787                           	
   788  000B04                     l499:		; BSR set to: ?
   789                           
   790                           	line	15
   791  000B04  0101               	movlb	1	; () banked
   792  000B06  0101               	movlb	1	; () banked
   793  000B08  5111               	movf	((___lwmod@divisor))&0ffh,w
   794  000B0A  0101               	movlb	1	; () banked
   795  000B0C  0101               	movlb	1	; () banked
   796  000B0E  5D0F               	subwf	((___lwmod@dividend))&0ffh,w
   797  000B10  0101               	movlb	1	; () banked
   798  000B12  0101               	movlb	1	; () banked
   799  000B14  5112               	movf	((___lwmod@divisor+1))&0ffh,w
   800  000B16  0101               	movlb	1	; () banked
   801  000B18  0101               	movlb	1	; () banked
   802  000B1A  5910               	subwfb	((___lwmod@dividend+1))&0ffh,w
   803  000B1C  A0D8               	btfss	status,0
   804  000B1E  D001               	goto	u1441
   805  000B20  D001               	goto	u1440
   806  000B22                     u1441:
   807  000B22  D00C               	goto	l500
   808  000B24                     u1440:
   809                           	line	16
   810  000B24  0101               	movlb	1	; () banked
   811  000B26  0101               	movlb	1	; () banked
   812  000B28  5111               	movf	((___lwmod@divisor))&0ffh,w
   813  000B2A  0101               	movlb	1	; () banked
   814  000B2C  0101               	movlb	1	; () banked
   815  000B2E  5F0F               	subwf	((___lwmod@dividend))&0ffh
   816  000B30  0101               	movlb	1	; () banked
   817  000B32  0101               	movlb	1	; () banked
   818  000B34  5112               	movf	((___lwmod@divisor+1))&0ffh,w
   819  000B36  0101               	movlb	1	; () banked
   820  000B38  0101               	movlb	1	; () banked
   821  000B3A  5B10               	subwfb	((___lwmod@dividend+1))&0ffh
   822                           
   823                           	
   824  000B3C                     l500:		; BSR set to: ?
   825                           
   826                           	line	17
   827  000B3C  0101               	movlb	1	; () banked
   828  000B3E  90D8               	bcf	status,0
   829  000B40  0101               	movlb	1	; () banked
   830  000B42  3312               	rrcf	((___lwmod@divisor+1))&0ffh
   831  000B44  0101               	movlb	1	; () banked
   832  000B46  3311               	rrcf	((___lwmod@divisor))&0ffh
   833                           	line	18
   834  000B48  0101               	movlb	1	; () banked
   835  000B4A  0101               	movlb	1	; () banked
   836  000B4C  2F13               	decfsz	((___lwmod@counter))&0ffh
   837                           	
   838  000B4E  D7DA               	goto	l499
   839                           	
   840  000B50                     l498:		; BSR set to: ?
   841                           
   842                           	line	19
   843                           	
   844  000B50                     l493:		; BSR set to: ?
   845                           
   846                           	line	20
   847  000B50  C10F  F10F         	movff	(___lwmod@dividend),(?___lwmod)
   848  000B54  C110  F110         	movff	(___lwmod@dividend+1),(?___lwmod+1)
   849  000B58  D000               	goto	l492
   850                           	line	21
   851  000B5A                     l492:
   852                           			; BSR set to: ?
   853                           
   854  000B5A  0012               	return
   855                           	opt stack 0
   856                           GLOBAL __end_of___lwmod
   857  000B5C                     	__end_of___lwmod:
   858                           	FNSIZE	___lwmod,2,4
   859                           ; =============== function ___lwmod ends =======
                                 =====
   860                           
   861                           	signat	___lwmod,8314
   862                           	global	_LCD_Inst
   863                           	global	??_LCD_Inst
   864                           	global	?_LCD_Inst
   865                                   psect   text5,class=CODE,space=0,reloc=2
   866                           
   867                           	opt lm
   868                           	file	"C:\Users\leeee\Desktop\HW8_1\LCD_PortD.C"
   869                           	line	44
   870  000000                     	__size_of_LCD_Inst	equ	__end_of_LCD_Inst-_LCD_I
                                 nst
   871                           ;LCD_PortD.C: 43: void LCD_Inst(unsigned char c)
   872                           ;LCD_PortD.C: 44: {
   873                           	
   874  000D88                     _LCD_Inst:		; BSR set to: ?
   875                           
   876                           	opt stack 28
   877                           	line	45
   878  000D88  9483               	bcf	c:(31770/8),(31770)&7	;volatile
   879                           	line	46
   880                           ;LCD_PortD.C: 46: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
   881  000D8A  C104  F105         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
   882  000D8E  0EF0               	movlw	0F0h
   883  000D90  0101               	movlb	1	; () banked
   884  000D92  1705               	andwf	(??_LCD_Inst+0+0)&0ffh
   885  000D94  5083               	movf	((c:3971)),c,w	;volatile
   886  000D96  0B0F               	andlw	low(0Fh)
   887  000D98  0101               	movlb	1	; () banked
   888  000D9A  1105               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
   889  000D9C  6E83               	movwf	((c:3971)),c	;volatile
   890                           	line	47
   891                           ;LCD_PortD.C: 47: LCD_Strobe();
   892  000D9E  EC24  F007         	call	_LCD_Strobe	;wreg free
   893                           	line	48
   894                           ;LCD_PortD.C: 48: PORTD = (PORTD & 0x0F) | ((c<<
                                 4) & 0xF0);
   895  000DA2  C104  F105         	movff	(LCD_Inst@c),??_LCD_Inst+0+0
   896  000DA6  0101               	movlb	1	; () banked
   897  000DA8  3B05               	swapf	(??_LCD_Inst+0+0)&0ffh
   898  000DAA  0EF0               	movlw	(0ffh shl 4) & 0ffh
   899  000DAC  1705               	andwf	(??_LCD_Inst+0+0)&0ffh
   900  000DAE  0EF0               	movlw	0F0h
   901  000DB0  0101               	movlb	1	; () banked
   902  000DB2  1705               	andwf	(??_LCD_Inst+0+0)&0ffh
   903  000DB4  5083               	movf	((c:3971)),c,w	;volatile
   904  000DB6  0B0F               	andlw	low(0Fh)
   905  000DB8  0101               	movlb	1	; () banked
   906  000DBA  1105               	iorwf	(??_LCD_Inst+0+0)&0ffh,w
   907  000DBC  6E83               	movwf	((c:3971)),c	;volatile
   908                           	line	49
   909                           ;LCD_PortD.C: 49: LCD_Strobe();
   910  000DBE  EC24  F007         	call	_LCD_Strobe	;wreg free
   911                           	line	50
   912                           ;LCD_PortD.C: 50: Wait_ms(10);
   913  000DC2  0E0A               	movlw	low(0Ah)
   914  000DC4  0101               	movlb	1	; () banked
   915  000DC6  0101               	movlb	1	; () banked
   916  000DC8  6F06               	movwf	((?_Wait_ms))&0ffh
   917  000DCA  0E00               	movlw	high(0Ah)
   918  000DCC  0101               	movlb	1	; () banked
   919  000DCE  6F07               	movwf	((?_Wait_ms+1))&0ffh
   920  000DD0  EC85  F006         	call	_Wait_ms	;wreg free
   921                           	line	51
   922                           ;LCD_PortD.C: 51: }
   923  000DD4                     l122:
   924                           			; BSR set to: ?
   925                           
   926  000DD4  0012               	return
   927                           	opt stack 0
   928                           GLOBAL __end_of_LCD_Inst
   929  000DD6                     	__end_of_LCD_Inst:
   930                           	FNSIZE	_LCD_Inst,1,1
   931                           ; =============== function _LCD_Inst ends ======
                                 ======
   932                           
   933                           	signat	_LCD_Inst,4216
   934                           	global	_LCD_Write
   935                           	global	??_LCD_Write
   936                           	global	?_LCD_Write
   937                                   psect   text6,class=CODE,space=0,reloc=2
   938                           
   939                           	opt lm
   940                           	file	"C:\Users\leeee\Desktop\HW8_1\LCD_PortD.C"
   941                           	line	62
   942  000000                     	__size_of_LCD_Write	equ	__end_of_LCD_Write-_LCD
                                 _Write
   943                           ;LCD_PortD.C: 61: void LCD_Write(unsigned char c
                                 )
   944                           ;LCD_PortD.C: 62: {
   945                           	
   946  000DD6                     _LCD_Write:		; BSR set to: ?
   947                           
   948                           	opt stack 28
   949                           	line	63
   950                           ;LCD_PortD.C: 63: RD2 = 1;
   951  000DD6  8483               	bsf	c:(31770/8),(31770)&7	;volatile
   952                           	line	64
   953                           ;LCD_PortD.C: 64: PORTD = (PORTD & 0x0F) | (c & 
                                 0xF0);
   954  000DD8  C10F  F110         	movff	(LCD_Write@c),??_LCD_Write+0+0
   955  000DDC  0EF0               	movlw	0F0h
   956  000DDE  0101               	movlb	1	; () banked
   957  000DE0  1710               	andwf	(??_LCD_Write+0+0)&0ffh
   958  000DE2  5083               	movf	((c:3971)),c,w	;volatile
   959  000DE4  0B0F               	andlw	low(0Fh)
   960  000DE6  0101               	movlb	1	; () banked
   961  000DE8  1110               	iorwf	(??_LCD_Write+0+0)&0ffh,w
   962  000DEA  6E83               	movwf	((c:3971)),c	;volatile
   963                           	line	65
   964                           ;LCD_PortD.C: 65: LCD_Strobe();
   965  000DEC  EC24  F007         	call	_LCD_Strobe	;wreg free
   966                           	line	66
   967                           ;LCD_PortD.C: 66: PORTD = (PORTD & 0x0F) | ((c<<
                                 4) & 0xF0);
   968  000DF0  C10F  F110         	movff	(LCD_Write@c),??_LCD_Write+0+0
   969  000DF4  0101               	movlb	1	; () banked
   970  000DF6  3B10               	swapf	(??_LCD_Write+0+0)&0ffh
   971  000DF8  0EF0               	movlw	(0ffh shl 4) & 0ffh
   972  000DFA  1710               	andwf	(??_LCD_Write+0+0)&0ffh
   973  000DFC  0EF0               	movlw	0F0h
   974  000DFE  0101               	movlb	1	; () banked
   975  000E00  1710               	andwf	(??_LCD_Write+0+0)&0ffh
   976  000E02  5083               	movf	((c:3971)),c,w	;volatile
   977  000E04  0B0F               	andlw	low(0Fh)
   978  000E06  0101               	movlb	1	; () banked
   979  000E08  1110               	iorwf	(??_LCD_Write+0+0)&0ffh,w
   980  000E0A  6E83               	movwf	((c:3971)),c	;volatile
   981                           	line	67
   982                           ;LCD_PortD.C: 67: LCD_Strobe();
   983  000E0C  EC24  F007         	call	_LCD_Strobe	;wreg free
   984                           	line	69
   985                           ;LCD_PortD.C: 69: }
   986  000E10                     l128:
   987                           			; BSR set to: ?
   988                           
   989  000E10  0012               	return
   990                           	opt stack 0
   991                           GLOBAL __end_of_LCD_Write
   992  000E12                     	__end_of_LCD_Write:
   993                           	FNSIZE	_LCD_Write,1,1
   994                           ; =============== function _LCD_Write ends =====
                                 =======
   995                           
   996                           	signat	_LCD_Write,4216
   997                           	global	___lwdiv
   998                           	global	??___lwdiv
   999                           	global	?___lwdiv
  1000                                   psect   text7,class=CODE,space=0,reloc=2
  1001                           
  1002                           	opt lm
  1003                           	file	"C:\Program Files (x86)\HI-TECH Software\P
                                 ICC-18\PRO\9.63\sources\lwdiv.c"
  1004                           	line	5
  1005  000000                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1006                           	
  1007  00095A                     ___lwdiv:		; BSR set to: ?
  1008                           
  1009                           	opt stack 28
  1010                           	line	9
  1011  00095A  0E00               	movlw	low(0)
  1012  00095C  0101               	movlb	1	; () banked
  1013  00095E  0101               	movlb	1	; () banked
  1014  000960  6F14               	movwf	((___lwdiv@quotient))&0ffh
  1015  000962  0E00               	movlw	high(0)
  1016  000964  0101               	movlb	1	; () banked
  1017  000966  6F15               	movwf	((___lwdiv@quotient+1))&0ffh
  1018                           	line	10
  1019  000968  0101               	movlb	1	; () banked
  1020  00096A  0101               	movlb	1	; () banked
  1021  00096C  5112               	movf	((___lwdiv@divisor+1))&0ffh,w
  1022  00096E  1111               	iorwf ((___lwdiv@divisor))&0ffh,w
  1023                           
  1024  000970  B4D8               	btfsc	status,2
  1025  000972  D001               	goto	u1451
  1026  000974  D001               	goto	u1450
  1027  000976                     u1451:
  1028  000976  D047               	goto	l484
  1029  000978                     u1450:
  1030                           	line	11
  1031  000978  0101               	movlb	1	; () banked
  1032  00097A  6F16               	movwf	(??___lwdiv+3+0)&0ffh
  1033  00097C  0E01               	movlw	low(01h)
  1034  00097E  0101               	movlb	1	; () banked
  1035  000980  0101               	movlb	1	; () banked
  1036  000982  6F13               	movwf	((___lwdiv@counter))&0ffh
  1037  000984  0101               	movlb	1	; () banked
  1038  000986  5116               	movf	(??___lwdiv+3+0)&0ffh,w
  1039                           	line	12
  1040  000988  D009               	goto	l485
  1041                           	
  1042  00098A                     l486:		; BSR set to: ?
  1043                           
  1044                           	line	13
  1045  00098A  0101               	movlb	1	; () banked
  1046  00098C  90D8               	bcf	status,0
  1047  00098E  0101               	movlb	1	; () banked
  1048  000990  3711               	rlcf	((___lwdiv@divisor))&0ffh
  1049  000992  0101               	movlb	1	; () banked
  1050  000994  3712               	rlcf	((___lwdiv@divisor+1))&0ffh
  1051                           	line	14
  1052  000996  0101               	movlb	1	; () banked
  1053  000998  0101               	movlb	1	; () banked
  1054  00099A  2B13               	incf	((___lwdiv@counter))&0ffh
  1055                           	line	15
  1056                           	
  1057  00099C                     l485:		; BSR set to: ?
  1058                           
  1059                           	line	12
  1060  00099C  0101               	movlb	1	; () banked
  1061                           	
  1062  00099E  0101               	movlb	1	; () banked
  1063  0009A0  AF12               	btfss	((___lwdiv@divisor+1))&0ffh,(15)&7
  1064  0009A2  D001               	goto	u1461
  1065  0009A4  D001               	goto	u1460
  1066  0009A6                     u1461:
  1067  0009A6  D7F1               	goto	l486
  1068  0009A8                     u1460:
  1069                           	
  1070  0009A8                     l487:		; BSR set to: ?
  1071                           
  1072                           	line	16
  1073                           	
  1074  0009A8                     l490:		; BSR set to: ?
  1075                           
  1076                           	line	17
  1077  0009A8  0101               	movlb	1	; () banked
  1078  0009AA  90D8               	bcf	status,0
  1079  0009AC  0101               	movlb	1	; () banked
  1080  0009AE  3714               	rlcf	((___lwdiv@quotient))&0ffh
  1081  0009B0  0101               	movlb	1	; () banked
  1082  0009B2  3715               	rlcf	((___lwdiv@quotient+1))&0ffh
  1083                           	line	18
  1084  0009B4  0101               	movlb	1	; () banked
  1085  0009B6  0101               	movlb	1	; () banked
  1086  0009B8  5111               	movf	((___lwdiv@divisor))&0ffh,w
  1087  0009BA  0101               	movlb	1	; () banked
  1088  0009BC  0101               	movlb	1	; () banked
  1089  0009BE  5D0F               	subwf	((___lwdiv@dividend))&0ffh,w
  1090  0009C0  0101               	movlb	1	; () banked
  1091  0009C2  0101               	movlb	1	; () banked
  1092  0009C4  5112               	movf	((___lwdiv@divisor+1))&0ffh,w
  1093  0009C6  0101               	movlb	1	; () banked
  1094  0009C8  0101               	movlb	1	; () banked
  1095  0009CA  5910               	subwfb	((___lwdiv@dividend+1))&0ffh,w
  1096  0009CC  A0D8               	btfss	status,0
  1097  0009CE  D001               	goto	u1471
  1098  0009D0  D001               	goto	u1470
  1099  0009D2                     u1471:
  1100  0009D2  D00F               	goto	l491
  1101  0009D4                     u1470:
  1102                           	line	19
  1103  0009D4  0101               	movlb	1	; () banked
  1104  0009D6  0101               	movlb	1	; () banked
  1105  0009D8  5111               	movf	((___lwdiv@divisor))&0ffh,w
  1106  0009DA  0101               	movlb	1	; () banked
  1107  0009DC  0101               	movlb	1	; () banked
  1108  0009DE  5F0F               	subwf	((___lwdiv@dividend))&0ffh
  1109  0009E0  0101               	movlb	1	; () banked
  1110  0009E2  0101               	movlb	1	; () banked
  1111  0009E4  5112               	movf	((___lwdiv@divisor+1))&0ffh,w
  1112  0009E6  0101               	movlb	1	; () banked
  1113  0009E8  0101               	movlb	1	; () banked
  1114  0009EA  5B10               	subwfb	((___lwdiv@dividend+1))&0ffh
  1115                           
  1116                           	line	20
  1117  0009EC  0101               	movlb	1	; () banked
  1118  0009EE  0101               	movlb	1	; () banked
  1119  0009F0  8114               	bsf	(0+(0/8)+(___lwdiv@quotient))&0ffh,(0)&7
  1120                           	line	21
  1121                           	
  1122  0009F2                     l491:		; BSR set to: ?
  1123                           
  1124                           	line	22
  1125  0009F2  0101               	movlb	1	; () banked
  1126  0009F4  90D8               	bcf	status,0
  1127  0009F6  0101               	movlb	1	; () banked
  1128  0009F8  3312               	rrcf	((___lwdiv@divisor+1))&0ffh
  1129  0009FA  0101               	movlb	1	; () banked
  1130  0009FC  3311               	rrcf	((___lwdiv@divisor))&0ffh
  1131                           	line	23
  1132  0009FE  0101               	movlb	1	; () banked
  1133  000A00  0101               	movlb	1	; () banked
  1134  000A02  2F13               	decfsz	((___lwdiv@counter))&0ffh
  1135                           	
  1136  000A04  D7D1               	goto	l490
  1137                           	
  1138  000A06                     l489:		; BSR set to: ?
  1139                           
  1140                           	line	24
  1141                           	
  1142  000A06                     l484:		; BSR set to: ?
  1143                           
  1144                           	line	25
  1145  000A06  C114  F10F         	movff	(___lwdiv@quotient),(?___lwdiv)
  1146  000A0A  C115  F110         	movff	(___lwdiv@quotient+1),(?___lwdiv+1)
  1147  000A0E  D000               	goto	l483
  1148                           	line	26
  1149  000A10                     l483:
  1150                           			; BSR set to: ?
  1151                           
  1152  000A10  0012               	return
  1153                           	opt stack 0
  1154                           GLOBAL __end_of___lwdiv
  1155  000A12                     	__end_of___lwdiv:
  1156                           	FNSIZE	___lwdiv,4,4
  1157                           ; =============== function ___lwdiv ends =======
                                 =====
  1158                           
  1159                           	signat	___lwdiv,8314
  1160                           	global	_LCD_Strobe
  1161                           	global	??_LCD_Strobe
  1162                           	global	?_LCD_Strobe
  1163                                   psect   text8,class=CODE,space=0,reloc=2
  1164                           
  1165                           	opt lm
  1166                           	file	"C:\Users\leeee\Desktop\HW8_1\LCD_PortD.C"
  1167                           	line	32
  1168  000000                     	__size_of_LCD_Strobe	equ	__end_of_LCD_Strobe-_L
                                 CD_Strobe
  1169                           ;LCD_PortD.C: 31: void LCD_Strobe(void)
  1170                           ;LCD_PortD.C: 32: {
  1171                           	
  1172  000E48                     _LCD_Strobe:		; BSR set to: ?
  1173                           
  1174                           	opt stack 27
  1175                           	line	33
  1176                           ;LCD_PortD.C: 33: RD3 = 0;
  1177  000E48  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  1178                           	line	34
  1179                           ;LCD_PortD.C: 34: LCD_Pause();
  1180  000E4A  EC09  F007         	call	_LCD_Pause	;wreg free
  1181                           	line	35
  1182                           ;LCD_PortD.C: 35: RD3 = 1;
  1183  000E4E  8683               	bsf	c:(31771/8),(31771)&7	;volatile
  1184                           	line	36
  1185                           ;LCD_PortD.C: 36: LCD_Pause();
  1186  000E50  EC09  F007         	call	_LCD_Pause	;wreg free
  1187                           	line	37
  1188                           ;LCD_PortD.C: 37: RD3 = 0;
  1189  000E54  9683               	bcf	c:(31771/8),(31771)&7	;volatile
  1190                           	line	38
  1191                           ;LCD_PortD.C: 38: LCD_Pause();
  1192  000E56  EC09  F007         	call	_LCD_Pause	;wreg free
  1193                           	line	39
  1194                           ;LCD_PortD.C: 39: }
  1195  000E5A                     l121:
  1196                           			; BSR set to: ?
  1197                           
  1198  000E5A  0012               	return
  1199                           	opt stack 0
  1200                           GLOBAL __end_of_LCD_Strobe
  1201  000E5C                     	__end_of_LCD_Strobe:
  1202                           	FNSIZE	_LCD_Strobe,0,0
  1203                           ; =============== function _LCD_Strobe ends ====
                                 ========
  1204                           
  1205                           	signat	_LCD_Strobe,88
  1206                           	global	_Wait_ms
  1207                           	global	??_Wait_ms
  1208                           	global	?_Wait_ms
  1209                                   psect   text9,class=CODE,space=0,reloc=2
  1210                           
  1211                           	opt lm
  1212                           	file	"C:\Users\leeee\Desktop\HW8_1\LCD_PortD.C"
  1213                           	line	16
  1214  000000                     	__size_of_Wait_ms	equ	__end_of_Wait_ms-_Wait_ms
  1215                           ;LCD_PortD.C: 15: void Wait_ms(unsigned int X)
  1216                           ;LCD_PortD.C: 16: {
  1217                           	
  1218  000D0A                     _Wait_ms:		; BSR set to: ?
  1219                           
  1220                           	opt stack 27
  1221                           	line	19
  1222                           ;LCD_PortD.C: 17: unsigned int i, j;
  1223                           ;LCD_PortD.C: 19: for (i=0; i<X; i++)
  1224  000D0A  0E00               	movlw	low(0)
  1225  000D0C  0101               	movlb	1	; () banked
  1226  000D0E  0101               	movlb	1	; () banked
  1227  000D10  6F08               	movwf	((Wait_ms@i))&0ffh
  1228  000D12  0E00               	movlw	high(0)
  1229  000D14  0101               	movlb	1	; () banked
  1230  000D16  6F09               	movwf	((Wait_ms@i+1))&0ffh
  1231  000D18  D026               	goto	l113
  1232                           	line	20
  1233                           	
  1234  000D1A                     l110:		; BSR set to: ?
  1235                           
  1236                           ;LCD_PortD.C: 20: for (j=0; j<617; j++);
  1237  000D1A  0E00               	movlw	low(0)
  1238  000D1C  0101               	movlb	1	; () banked
  1239  000D1E  0101               	movlb	1	; () banked
  1240  000D20  6F0A               	movwf	((Wait_ms@j))&0ffh
  1241  000D22  0E00               	movlw	high(0)
  1242  000D24  0101               	movlb	1	; () banked
  1243  000D26  6F0B               	movwf	((Wait_ms@j+1))&0ffh
  1244  000D28  0E69               	movlw	069h
  1245  000D2A  0101               	movlb	1	; () banked
  1246  000D2C  0101               	movlb	1	; () banked
  1247  000D2E  5D0A               	subwf	((Wait_ms@j))&0ffh,w
  1248  000D30  0E02               	movlw	02h
  1249  000D32  0101               	movlb	1	; () banked
  1250  000D34  590B               	subwfb	((Wait_ms@j+1))&0ffh,w
  1251  000D36  A0D8               	btfss	status,0
  1252  000D38  D001               	goto	u1481
  1253  000D3A  D001               	goto	u1480
  1254  000D3C                     u1481:
  1255  000D3C  D001               	goto	l114
  1256  000D3E                     u1480:
  1257  000D3E  D00F               	goto	l115
  1258                           	
  1259  000D40                     l114:		; BSR set to: ?
  1260                           
  1261  000D40  0101               	movlb	1	; () banked
  1262  000D42  0101               	movlb	1	; () banked
  1263  000D44  4B0A               	infsnz	((Wait_ms@j))&0ffh
  1264  000D46  2B0B               	incf	((Wait_ms@j+1))&0ffh
  1265  000D48  0E69               	movlw	069h
  1266  000D4A  0101               	movlb	1	; () banked
  1267  000D4C  0101               	movlb	1	; () banked
  1268  000D4E  5D0A               	subwf	((Wait_ms@j))&0ffh,w
  1269  000D50  0E02               	movlw	02h
  1270  000D52  0101               	movlb	1	; () banked
  1271  000D54  590B               	subwfb	((Wait_ms@j+1))&0ffh,w
  1272  000D56  A0D8               	btfss	status,0
  1273  000D58  D001               	goto	u1491
  1274  000D5A  D001               	goto	u1490
  1275  000D5C                     u1491:
  1276  000D5C  D7F1               	goto	l114
  1277  000D5E                     u1490:
  1278                           	
  1279  000D5E                     l115:		; BSR set to: ?
  1280                           
  1281                           	line	19
  1282  000D5E  0101               	movlb	1	; () banked
  1283  000D60  0101               	movlb	1	; () banked
  1284  000D62  4B08               	infsnz	((Wait_ms@i))&0ffh
  1285  000D64  2B09               	incf	((Wait_ms@i+1))&0ffh
  1286                           	
  1287  000D66                     l113:		; BSR set to: ?
  1288                           
  1289  000D66  0101               	movlb	1	; () banked
  1290  000D68  0101               	movlb	1	; () banked
  1291  000D6A  5106               	movf	((Wait_ms@X))&0ffh,w
  1292  000D6C  0101               	movlb	1	; () banked
  1293  000D6E  0101               	movlb	1	; () banked
  1294  000D70  5D08               	subwf	((Wait_ms@i))&0ffh,w
  1295  000D72  0101               	movlb	1	; () banked
  1296  000D74  0101               	movlb	1	; () banked
  1297  000D76  5107               	movf	((Wait_ms@X+1))&0ffh,w
  1298  000D78  0101               	movlb	1	; () banked
  1299  000D7A  0101               	movlb	1	; () banked
  1300  000D7C  5909               	subwfb	((Wait_ms@i+1))&0ffh,w
  1301  000D7E  A0D8               	btfss	status,0
  1302  000D80  D001               	goto	u1501
  1303  000D82  D001               	goto	u1500
  1304  000D84                     u1501:
  1305  000D84  D7CA               	goto	l110
  1306  000D86                     u1500:
  1307                           	
  1308  000D86                     l111:		; BSR set to: ?
  1309                           
  1310                           	line	21
  1311                           ;LCD_PortD.C: 21: }
  1312  000D86                     l109:
  1313                           			; BSR set to: ?
  1314                           
  1315  000D86  0012               	return
  1316                           	opt stack 0
  1317                           GLOBAL __end_of_Wait_ms
  1318  000D88                     	__end_of_Wait_ms:
  1319                           	FNSIZE	_Wait_ms,4,2
  1320                           ; =============== function _Wait_ms ends =======
                                 =====
  1321                           
  1322                           	signat	_Wait_ms,4216
  1323                           	global	_LCD_Pause
  1324                           	global	??_LCD_Pause
  1325                           	global	?_LCD_Pause
  1326                                   psect   text10,class=CODE,space=0,reloc=
                                 2
  1327                           
  1328                           	opt lm
  1329                           	file	"C:\Users\leeee\Desktop\HW8_1\LCD_PortD.C"
  1330                           	line	25
  1331  000000                     	__size_of_LCD_Pause	equ	__end_of_LCD_Pause-_LCD
                                 _Pause
  1332                           ;LCD_PortD.C: 24: void LCD_Pause(void)
  1333                           ;LCD_PortD.C: 25: {
  1334                           	
  1335  000E12                     _LCD_Pause:		; BSR set to: ?
  1336                           
  1337                           	opt stack 26
  1338                           	line	27
  1339                           ;LCD_PortD.C: 26: unsigned char x;
  1340                           ;LCD_PortD.C: 27: for (x=0; x<20; x++);
  1341  000E12  0101               	movlb	1	; () banked
  1342  000E14  6F12               	movwf	(??_LCD_Pause+1+0)&0ffh
  1343  000E16  0E00               	movlw	low(0)
  1344  000E18  0101               	movlb	1	; () banked
  1345  000E1A  0101               	movlb	1	; () banked
  1346  000E1C  6F11               	movwf	((LCD_Pause@x))&0ffh
  1347  000E1E  0101               	movlb	1	; () banked
  1348  000E20  5112               	movf	(??_LCD_Pause+1+0)&0ffh,w
  1349  000E22  0E13               	movlw	(014h-1)
  1350  000E24  0101               	movlb	1	; () banked
  1351  000E26  0101               	movlb	1	; () banked
  1352  000E28  6511               	cpfsgt	((LCD_Pause@x))&0ffh
  1353  000E2A  D001               	goto	u1511
  1354  000E2C  D001               	goto	u1510
  1355  000E2E                     u1511:
  1356  000E2E  D001               	goto	l118
  1357  000E30                     u1510:
  1358  000E30  D00A               	goto	l119
  1359                           	
  1360  000E32                     l118:		; BSR set to: ?
  1361                           
  1362  000E32  0101               	movlb	1	; () banked
  1363  000E34  0101               	movlb	1	; () banked
  1364  000E36  2B11               	incf	((LCD_Pause@x))&0ffh
  1365  000E38  0E13               	movlw	(014h-1)
  1366  000E3A  0101               	movlb	1	; () banked
  1367  000E3C  0101               	movlb	1	; () banked
  1368  000E3E  6511               	cpfsgt	((LCD_Pause@x))&0ffh
  1369  000E40  D001               	goto	u1521
  1370  000E42  D001               	goto	u1520
  1371  000E44                     u1521:
  1372  000E44  D7F6               	goto	l118
  1373  000E46                     u1520:
  1374                           	
  1375  000E46                     l119:		; BSR set to: ?
  1376                           
  1377                           	line	28
  1378                           ;LCD_PortD.C: 28: }
  1379  000E46                     l117:
  1380                           			; BSR set to: ?
  1381                           
  1382  000E46  0012               	return
  1383                           	opt stack 0
  1384                           GLOBAL __end_of_LCD_Pause
  1385  000E48                     	__end_of_LCD_Pause:
  1386                           	FNSIZE	_LCD_Pause,2,0
  1387                           ; =============== function _LCD_Pause ends =====
                                 =======
  1388                           
  1389                           	signat	_LCD_Pause,88
  1390                           	global	_IntServe
  1391                           	global	??_IntServe
  1392                           	global	?_IntServe
  1393                                   psect   text11,class=CODE,space=0,reloc=
                                 2
  1394                           
  1395                           	opt lm
  1396                           	file	"C:\Users\leeee\Desktop\HW8_1\Timer2.c"
  1397                           	line	10
  1398  000000                     	__size_of_IntServe	equ	__end_of_IntServe-_IntSe
                                 rve
  1399                           ;Timer2.c: 9: void interrupt IntServe(void)
  1400                           ;Timer2.c: 10: {
  1401                           	
  1402  000A12                     _IntServe:		; BSR set to: ?
  1403                           
  1404  000A12  0006               	pop	; remove dummy address from shadow register
                                  refresh
  1405                           
  1406                           	opt stack 31
  1407                                   psect   intcode,class=CODE,space=0,reloc
                                 =2
  1408                           	global	int_func
  1409  000808                     int_func:
  1410                                   psect   intcode
  1411  000808  CFFA F118          	movff	pclat+0,??_IntServe+1
  1412  00080C  CFFB F119          	movff	pclat+1,??_IntServe+2
  1413  000810  CFE9 F11A          	movff	fsr0l+0,??_IntServe+3
  1414  000814  ED09  F005         	call	_IntServe,f	;refresh shadow registers
  1415                                   psect   text11
  1416  000A14  CFEA F11B          	movff	fsr0h+0,??_IntServe+4
  1417  000A18  CFE1 F11C          	movff	fsr1l+0,??_IntServe+5
  1418  000A1C  CFE2 F11D          	movff	fsr1h+0,??_IntServe+6
  1419  000A20  CFD9 F11E          	movff	fsr2l+0,??_IntServe+7
  1420  000A24  CFDA F11F          	movff	fsr2h+0,??_IntServe+8
  1421  000A28  CFF3 F120          	movff	prodl+0,??_IntServe+9
  1422  000A2C  CFF4 F121          	movff	prodh+0,??_IntServe+10
  1423  000A30  CFF6 F122          	movff	tblptrl+0,??_IntServe+11
  1424  000A34  CFF7 F123          	movff	tblptrh+0,??_IntServe+12
  1425  000A38  CFF8 F124          	movff	tblptru+0,??_IntServe+13
  1426                           	line	11
  1427                           ;Timer2.c: 11: if (TMR2IF) {
  1428  000A3C  A29E               	btfss	c:(31985/8),(31985)&7	;volatile
  1429  000A3E  D001               	goto	i2u1281
  1430  000A40  D001               	goto	i2u1280
  1431  000A42                     i2u1281:
  1432  000A42  D025               	goto	i2l157
  1433  000A44                     i2u1280:
  1434                           	line	12
  1435                           ;Timer2.c: 12: RC0 = !RC0;
  1436  000A44  7082               	btg	c:(31760/8),(31760)&7	;volatile
  1437                           	line	13
  1438                           ;Timer2.c: 13: if (RB0) RUN = 1;
  1439  000A46  A081               	btfss	c:(31752/8),(31752)&7	;volatile
  1440  000A48  D001               	goto	i2u1291
  1441  000A4A  D001               	goto	i2u1290
  1442  000A4C                     i2u1291:
  1443  000A4C  D006               	goto	i2l158
  1444  000A4E                     i2u1290:
  1445  000A4E  0101               	movlb	1	; () banked
  1446  000A50  6F17               	movwf	(??_IntServe+0+0)&0ffh
  1447  000A52  0E01               	movlw	low(01h)
  1448  000A54  6E00               	movwf	((c:0)),c
  1449  000A56  0101               	movlb	1	; () banked
  1450  000A58  5117               	movf	(??_IntServe+0+0)&0ffh,w
  1451                           	
  1452  000A5A                     i2l158:		; BSR set to: ?
  1453                           
  1454                           	line	14
  1455                           ;Timer2.c: 14: if (RB1) RUN = 0;
  1456  000A5A  A281               	btfss	c:(31753/8),(31753)&7	;volatile
  1457  000A5C  D001               	goto	i2u1301
  1458  000A5E  D001               	goto	i2u1300
  1459  000A60                     i2u1301:
  1460  000A60  D006               	goto	i2l159
  1461  000A62                     i2u1300:
  1462  000A62  0101               	movlb	1	; () banked
  1463  000A64  6F17               	movwf	(??_IntServe+0+0)&0ffh
  1464  000A66  0E00               	movlw	low(0)
  1465  000A68  6E00               	movwf	((c:0)),c
  1466  000A6A  0101               	movlb	1	; () banked
  1467  000A6C  5117               	movf	(??_IntServe+0+0)&0ffh,w
  1468                           	
  1469  000A6E                     i2l159:		; BSR set to: ?
  1470                           
  1471                           	line	15
  1472                           ;Timer2.c: 15: if (RB2) TIME = 0;
  1473  000A6E  A481               	btfss	c:(31754/8),(31754)&7	;volatile
  1474  000A70  D001               	goto	i2u1311
  1475  000A72  D001               	goto	i2u1310
  1476  000A74                     i2u1311:
  1477  000A74  D004               	goto	i2l160
  1478  000A76                     i2u1310:
  1479  000A76  0E00               	movlw	low(0)
  1480  000A78  6E01               	movwf	((c:1)),c
  1481  000A7A  0E00               	movlw	high(0)
  1482  000A7C  6E02               	movwf	((c:1+1)),c
  1483                           	
  1484  000A7E                     i2l160:		; BSR set to: ?
  1485                           
  1486                           	line	16
  1487                           ;Timer2.c: 16: if (RUN) TIME += 1;
  1488  000A7E  5000               	movf	((c:0)),c,w
  1489  000A80  B4D8               	btfsc	status,2
  1490  000A82  D001               	goto	i2u1321
  1491  000A84  D001               	goto	i2u1320
  1492  000A86                     i2u1321:
  1493  000A86  D002               	goto	i2l161
  1494  000A88                     i2u1320:
  1495  000A88  4A01               	infsnz	((c:1)),c
  1496  000A8A  2A02               	incf	((c:1+1)),c
  1497                           	
  1498  000A8C                     i2l161:		; BSR set to: ?
  1499                           
  1500                           	line	17
  1501                           ;Timer2.c: 17: TMR2IF = 0;
  1502  000A8C  929E               	bcf	c:(31985/8),(31985)&7	;volatile
  1503                           	line	18
  1504                           	
  1505  000A8E                     i2l157:		; BSR set to: ?
  1506                           
  1507                           	line	19
  1508                           ;Timer2.c: 18: }
  1509                           ;Timer2.c: 19: }
  1510  000A8E                     i2l156:
  1511                           			; BSR set to: ?
  1512                           
  1513  000A8E  C124  FFF8         	movff	??_IntServe+13,tblptru+0
  1514  000A92  C123  FFF7         	movff	??_IntServe+12,tblptrh+0
  1515  000A96  C122  FFF6         	movff	??_IntServe+11,tblptrl+0
  1516  000A9A  C121  FFF4         	movff	??_IntServe+10,prodh+0
  1517  000A9E  C120  FFF3         	movff	??_IntServe+9,prodl+0
  1518  000AA2  C11F  FFDA         	movff	??_IntServe+8,fsr2h+0
  1519  000AA6  C11E  FFD9         	movff	??_IntServe+7,fsr2l+0
  1520  000AAA  C11D  FFE2         	movff	??_IntServe+6,fsr1h+0
  1521  000AAE  C11C  FFE1         	movff	??_IntServe+5,fsr1l+0
  1522  000AB2  C11B  FFEA         	movff	??_IntServe+4,fsr0h+0
  1523  000AB6  C11A  FFE9         	movff	??_IntServe+3,fsr0l+0
  1524  000ABA  C119  FFFB         	movff	??_IntServe+2,pclat+1
  1525  000ABE  C118  FFFA         	movff	??_IntServe+1,pclat+0
  1526  000AC2  0011               	retfie f
  1527                           	opt stack 0
  1528                           GLOBAL __end_of_IntServe
  1529  000AC4                     	__end_of_IntServe:
  1530                           	FNSIZE	_IntServe,14,0
  1531                           ; =============== function _IntServe ends ======
                                 ======
  1532                           
  1533                           	signat	_IntServe,88
  1534                           	FNCALL	_main,_LCD_Init
  1535                           	FNCALL	_main,_LCD_Move
  1536                           	FNCALL	_main,_LCD_Out
  1537                           	FNCALL	_LCD_Move,_LCD_Inst
  1538                           	FNCALL	_LCD_Out,___lwmod
  1539                           	FNCALL	_LCD_Out,___lwdiv
  1540                           	FNCALL	_LCD_Out,_LCD_Write
  1541                           	FNCALL	_LCD_Init,_LCD_Inst
  1542                           	FNCALL	_LCD_Init,_Wait_ms
  1543                           	FNCALL	_LCD_Inst,_LCD_Strobe
  1544                           	FNCALL	_LCD_Inst,_Wait_ms
  1545                           	FNCALL	_LCD_Write,_LCD_Strobe
  1546                           	FNCALL	_LCD_Strobe,_LCD_Pause
  1547                           	FNROOT	_main
  1548                           	FNCALL	intlevel2,_IntServe
  1549                           	global	intlevel2
  1550                           	FNROOT	intlevel2
  1551                                   psect   const,class=CODE,space=0,reloc=2
  1552                           	global	_TIME
  1553                           	global	_TIME
  1554  000000                     _TIME  equ     1
  1555                           
  1556                           	DABS	1,1,2	;_TIME
  1557                           	global	_RUN
  1558                           	global	_RUN
  1559  000000                     _RUN  equ     0
  1560                           
  1561                           	DABS	1,0,1	;_RUN
  1562                           	global	_ADCON1
  1563  000000                     _ADCON1	equ	0xFC1
  1564                           	global	_PORTD
  1565  000000                     _PORTD	equ	0xF83
  1566                           	global	_PR2
  1567  000000                     _PR2	equ	0xFCB
  1568                           	global	_T2CON
  1569  000000                     _T2CON	equ	0xFCA
  1570                           	global	_TRISA
  1571  000000                     _TRISA	equ	0xF92
  1572                           	global	_TRISB
  1573  000000                     _TRISB	equ	0xF93
  1574                           	global	_TRISC
  1575  000000                     _TRISC	equ	0xF94
  1576                           	global	_TRISD
  1577  000000                     _TRISD	equ	0xF95
  1578                           	global	_TXREG
  1579  000000                     _TXREG	equ	0xFAD
  1580                           	global	_GIE
  1581  000000                     _GIE	equ	0x7F97
  1582                           	global	_PEIE
  1583  000000                     _PEIE	equ	0x7F96
  1584                           	global	_RA1
  1585  000000                     _RA1	equ	0x7C01
  1586                           	global	_RB0
  1587  000000                     _RB0	equ	0x7C08
  1588                           	global	_RB1
  1589  000000                     _RB1	equ	0x7C09
  1590                           	global	_RB2
  1591  000000                     _RB2	equ	0x7C0A
  1592                           	global	_RC0
  1593  000000                     _RC0	equ	0x7C10
  1594                           	global	_RD1
  1595  000000                     _RD1	equ	0x7C19
  1596                           	global	_RD2
  1597  000000                     _RD2	equ	0x7C1A
  1598                           	global	_RD3
  1599  000000                     _RD3	equ	0x7C1B
  1600                           	global	_TMR2IE
  1601  000000                     _TMR2IE	equ	0x7CE9
  1602                           	global	_TMR2IF
  1603  000000                     _TMR2IF	equ	0x7CF1
  1604                           	global	_TMR2IP
  1605  000000                     _TMR2IP	equ	0x7CF9
  1606                           	global	_TRMT
  1607  000000                     _TRMT	equ	0x7D61
  1608                           	psect	intsave_regs,class=BIGRAM,space=1
  1609                           	PSECT	param1,class=BANK1,space=1
  1610                           	GLOBAL	__Lparam1
  1611                           	FNCONF	param1,??,?
  1612                           	GLOBAL	__Labsbss0
  1613  000000                     __Labsbss0	EQU	0
  1614                           	GLOBAL	__Habsbss0
  1615  000000                     __Habsbss0	EQU	3
  1616                           GLOBAL	__Lparam, __Hparam
  1617                           GLOBAL	__Lparam1, __Hparam1
  1618  000000                     __Lparam	EQU	__Lparam1
  1619  000000                     __Hparam	EQU	__Hparam1


HI-TECH Software PICC-18 Macro Assembler V9.63PL3 build 4692 
Symbol Table                                           Mon Mar 23 13:54:44 2020

        ?_LCD_Strobe 0111                  l110 0D1A  
                l111 0D86                  l113 0D66  
                l121 0E5A                  l114 0D40  
                l122 0DD4                  l115 0D5E  
                l123 0D08                  l124 0CA4  
                l117 0E46                  l109 0D86  
                l125 0CC4                  l118 0E32  
                l126 0CE6                  l119 0E46  
                l127 0D08                  l128 0E10  
                l129 0C84                  l162 0958  
                l163 0856                  l171 0BEE  
                l500 0B3C                  l164 08C2  
                l172 0BAE                  l166 08E0  
                l167 0958                  l169 091C  
                l490 09A8                  l483 0A10  
                l491 09F2                  l484 0A06  
                l492 0B5A                  l485 099C  
                l493 0B50                  l486 098A  
                l494 0AF8                  l487 09A8  
                l495 0AE6                  l496 0B04  
                l489 0A06                  l498 0B50  
                l499 0B04                  _GIE 007F97  
                _RA1 007C01                  _RB0 007C08  
                _RB1 007C09                  _RC0 007C10  
                _RB2 007C0A                  _RD1 007C19  
                _RD2 007C1A                  _RD3 007C1B  
                _PR2 000FCB                  _RUN 000000  
    __end_of_LCD_Out 095A                 u1400 0908  
               u1401 0906                 u1410 0958  
               u1330 0C92                 u1411 0956  
               u1331 0C90                 u1500 0D86  
               u1420 0AD4                 u1340 0CB2  
               u1501 0D84                 u1421 0AD2  
               u1405 0900                 u1341 0CB0  
               u1510 0E30                 u1430 0B04  
               u1350 0CD4                 u1511 0E2E  
               u1431 0B02                 u1351 0CD2  
               u1520 0E46                 u1440 0B24  
               u1360 0CF6                 u1521 0E44  
               u1441 0B22                 u1361 0CF4  
               u1450 0978                 u1370 0854  
               u1451 0976                 u1371 0852  
               u1460 09A8                 u1380 08C2  
               u1461 09A6                 u1381 08C0  
               u1470 09D4                 u1390 08DE  
               u1471 09D2                 u1391 08DC  
               u1480 0D3E                 u1481 0D3C  
               u1490 0D5E                 u1491 0D5C  
               _PEIE 007F96                 _TIME 000001  
               _TRMT 007D61                 _main 0B5C  
               fsr0h 000FEA                 fsr1h 000FE2  
               indf0 000FEF                 fsr0l 000FE9  
               fsr2h 000FDA                 fsr1l 000FE1  
               fsr2l 000FD9                 pclat 000FFA  
               prodh 000FF4                 prodl 000FF3  
               start 0818          LCD_Out@DATA 0102  
        LCD_Move@Col 0103          LCD_Move@Row 0102  
   __end_of_LCD_Init 0C86     __end_of_LCD_Inst 0DD6  
   __end_of_LCD_Move 0D0A      __end_of_Wait_ms 0D88  
              ?_main 0100                _T2CON 000FCA  
    __end_of___lwdiv 0A12      __end_of___lwmod 0B5C  
              i2l160 0A7E                i2l161 0A8C  
              i2l156 0A8E                i2l157 0A8E  
              i2l158 0A5A                i2l159 0A6E  
              _PORTD 000F83                _TRISA 000F92  
              _TRISB 000F93                _TRISC 000F94  
              _TRISD 000F95                _TXREG 000FAD  
              status 000FD8         __end_of_main 0BF4  
   __end_of_IntServe 0AC4               ??_main 0100  
      __activetblptr 000000    __end_of_LCD_Pause 0E48  
          ??_LCD_Out 0106    __end_of_LCD_Write 0E12  
             _ADCON1 000FC1               i2u1300 0A62  
             i2u1301 0A60               i2u1310 0A76  
             i2u1311 0A74               i2u1320 0A88  
             i2u1321 0A86               i2u1280 0A44  
             i2u1281 0A42               i2u1290 0A4E  
             i2u1291 0A4C               _TMR2IE 007CE9  
             _TMR2IF 007CF1               _TMR2IP 007CF9  
             __Ldata 000000            ??_Wait_ms 0108  
          ??___lwdiv 0113            ??___lwmod 0113  
       __mediumconst 1000               tblptrh 000FF7  
             tblptrl 000FF6               tblptru 000FF8  
         __accesstop 0080            ?_LCD_Init 0102  
          ?_LCD_Inst 0104            ?_LCD_Move 0102  
          LCD_Inst@c 0104         ??_LCD_Strobe 0111  
          ?_IntServe 0117           ??_LCD_Init 0102  
         ??_LCD_Inst 0105           ??_LCD_Move 0104  
 __end_of_LCD_Strobe 0E5C              _LCD_Out 0836  
         ??_IntServe 0117              __Hparam 0125  
            __Lparam 0100              _Wait_ms 0D0A  
            ___lwdiv 095A              ___lwmod 0AC4  
            __ramtop 1000            _LCD_Pause 0E12  
          _LCD_Write 0DD6        __Lmediumconst 1000  
            int_func 0808           ?_LCD_Pause 0111  
         ?_LCD_Write 010F           LCD_Pause@x 0111  
         LCD_Write@c 010F            __Habsbss0 000003  
          __Labsbss0 000000             ?_LCD_Out 0102  
           LCD_Out@A 0107             LCD_Out@N 0104  
           LCD_Out@i 0106          ??_LCD_Pause 0111  
        ??_LCD_Write 0110     ___lwdiv@dividend 010F  
           ?_Wait_ms 0106             ?___lwdiv 010F  
           ?___lwmod 010F          __smallconst 1000  
   ___lwdiv@quotient 0114             _LCD_Init 0BF4  
           _LCD_Inst 0D88             _LCD_Move 0C86  
           _IntServe 0A12             __Hparam1 0125  
           __Lparam1 0100             Wait_ms@X 0106  
           Wait_ms@i 0108             Wait_ms@j 010A  
       __Lsmallconst 1000      ___lwdiv@divisor 0111  
    ___lwdiv@counter 0113           _LCD_Strobe 0E48  
           intlevel2 0E5C     ___lwmod@dividend 010F  
    ___lwmod@divisor 0111      ___lwmod@counter 0113  
